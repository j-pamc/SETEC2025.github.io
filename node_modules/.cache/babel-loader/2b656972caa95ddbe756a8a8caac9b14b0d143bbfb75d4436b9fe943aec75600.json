{"ast":null,"code":"// src/pages/Schedule.jsx\nimport React,{useState,useEffect}from'react';import ScheduleDay from'../components/ScheduleDay';import CourseFilter from'../components/CourseFilter';import'../styles/schedule.css';import'../styles/scheduleDay.css';// Dados de cursos (pode vir de uma API ou arquivo JSON)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const COURSES=[{id:'all',name:'Todos',color:'#0A2463'},{id:'einfo',name:'Eng. Informática',color:'#007EBD'},{id:'epi',name:'Eng. de Petróleos',color:'#D72638'},{id:'emc',name:'Eng. Mecânica',color:'#595A5B'},{id:'ecivil',name:'Eng. Civil',color:'#0B5589'},{id:'eqm',name:'Eng. Química',color:'#2E8524'},{id:'electro',name:'Eng. Electrotécnica',color:'#F9AA0E'}];const Schedule=()=>{const[schedule,setSchedule]=useState([]);const[filteredSchedule,setFilteredSchedule]=useState([]);const[selectedDay,setSelectedDay]=useState('28');const[selectedCourse,setSelectedCourse]=useState('all');const[isLoading,setIsLoading]=useState(true);useEffect(()=>{// Simulação de carregamento de dados\nconst fetchSchedule=async()=>{try{// Substitua por uma chamada real à API\n// const response = await fetch('/api/schedule');\n// const data = await response.json();\n// Dados mockados temporários\nconst mockData=[{id:1,day:\"28\",time:\"09:00-10:00\",title:\"Abertura Oficial\",type:\"Cerimônia\",course:\"all\",location:\"Auditório Principal\"},{id:1,day:\"29\",time:\"10:00-10:30\",title:\"Evento teste\",type:\"Apresentação\",course:\"all\",location:\"Auditório Principal 1\"}// Adicione mais eventos conforme necessário\n];setSchedule(mockData);setFilteredSchedule(mockData.filter(event=>event.day==='28'));setIsLoading(false);}catch(error){console.error(\"Error loading schedule:\",error);setIsLoading(false);}};fetchSchedule();},[]);useEffect(()=>{let filtered=schedule.filter(event=>event.day===selectedDay);if(selectedCourse!=='all'){filtered=filtered.filter(event=>event.course===selectedCourse);}setFilteredSchedule(filtered);},[selectedDay,selectedCourse,schedule]);const days=['28','29','30'];return/*#__PURE__*/_jsxs(\"div\",{className:\"schedule-page\",children:[/*#__PURE__*/_jsx(\"section\",{className:\"schedule-hero\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Cronograma do Evento\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Confira a programa\\xE7\\xE3o completa\"})]})}),/*#__PURE__*/_jsx(\"section\",{className:\"schedule-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"schedule-filters\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"filters-bar\",children:[/*#__PURE__*/_jsx(CourseFilter,{courses:COURSES,selectedCourse:selectedCourse,onCourseSelect:setSelectedCourse}),/*#__PURE__*/_jsx(\"div\",{className:\"day-selector day-title\",children:days.map(day=>/*#__PURE__*/_jsxs(\"button\",{className:\"btn day-button \".concat(selectedDay===day?'active':''),onClick:()=>setSelectedDay(day),children:[\"Dia \",day]},day))})]})}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Carregando cronograma...\"}):filteredSchedule.length>0?/*#__PURE__*/_jsx(ScheduleDay,{day:\"Dia \".concat(selectedDay,\" de Maio\"),events:filteredSchedule}):/*#__PURE__*/_jsx(\"div\",{className:\"no-events\",children:\"Nenhum evento programado para este dia/filtro.\"})]})})]});};export default Schedule;","map":{"version":3,"names":["React","useState","useEffect","ScheduleDay","CourseFilter","jsx","_jsx","jsxs","_jsxs","COURSES","id","name","color","Schedule","schedule","setSchedule","filteredSchedule","setFilteredSchedule","selectedDay","setSelectedDay","selectedCourse","setSelectedCourse","isLoading","setIsLoading","fetchSchedule","mockData","day","time","title","type","course","location","filter","event","error","console","filtered","days","className","children","courses","onCourseSelect","map","concat","onClick","length","events"],"sources":["/workspaces/SETEC2025/src/pages/Schedule.jsx"],"sourcesContent":["// src/pages/Schedule.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport ScheduleDay from '../components/ScheduleDay';\r\nimport CourseFilter from '../components/CourseFilter';\r\nimport '../styles/schedule.css';\r\nimport '../styles/scheduleDay.css';\r\n\r\n// Dados de cursos (pode vir de uma API ou arquivo JSON)\r\nconst COURSES = [\r\n  { id: 'all', name: 'Todos', color: '#0A2463' },\r\n  { id: 'einfo', name: 'Eng. Informática', color: '#007EBD' },\r\n  { id: 'epi', name: 'Eng. de Petróleos', color: '#D72638' },\r\n  { id: 'emc', name: 'Eng. Mecânica', color: '#595A5B' },\r\n  { id: 'ecivil', name: 'Eng. Civil', color: '#0B5589' },\r\n  { id: 'eqm', name: 'Eng. Química', color: '#2E8524' },\r\n  { id: 'electro', name: 'Eng. Electrotécnica', color: '#F9AA0E' }\r\n];\r\n\r\nconst Schedule = () => {\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [filteredSchedule, setFilteredSchedule] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState('28');\r\n  const [selectedCourse, setSelectedCourse] = useState('all');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulação de carregamento de dados\r\n    const fetchSchedule = async () => {\r\n      try {\r\n        // Substitua por uma chamada real à API\r\n        // const response = await fetch('/api/schedule');\r\n        // const data = await response.json();\r\n        \r\n        // Dados mockados temporários\r\n        const mockData = [\r\n          {\r\n            id: 1,\r\n            day: \"28\",\r\n            time: \"09:00-10:00\",\r\n            title: \"Abertura Oficial\",\r\n            type: \"Cerimônia\",\r\n            course: \"all\",\r\n            location: \"Auditório Principal\"\r\n          },\r\n          {\r\n            id: 1,\r\n            day: \"29\",\r\n            time: \"10:00-10:30\",\r\n            title: \"Evento teste\",\r\n            type: \"Apresentação\",\r\n            course: \"all\",\r\n            location: \"Auditório Principal 1\"\r\n          },\r\n          // Adicione mais eventos conforme necessário\r\n        ];\r\n        \r\n        setSchedule(mockData);\r\n        setFilteredSchedule(mockData.filter(event => event.day === '28'));\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error loading schedule:\", error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSchedule();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = schedule.filter(event => event.day === selectedDay);\r\n    \r\n    if (selectedCourse !== 'all') {\r\n      filtered = filtered.filter(event => event.course === selectedCourse);\r\n    }\r\n    \r\n    setFilteredSchedule(filtered);\r\n  }, [selectedDay, selectedCourse, schedule]);\r\n\r\n  const days = ['28', '29', '30'];\r\n\r\n  return (\r\n    <div className=\"schedule-page\">\r\n      <section className=\"schedule-hero\">\r\n        <div className=\"container\">\r\n          <h1>Cronograma do Evento</h1>\r\n          <p>Confira a programação completa</p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"schedule-content\">\r\n        <div className=\"container\">\r\n        <div className=\"schedule-filters\">\r\n        <div className=\"filters-bar\">\r\n            <CourseFilter\r\n              courses={COURSES}\r\n              selectedCourse={selectedCourse}\r\n              onCourseSelect={setSelectedCourse}\r\n            />\r\n\r\n            <div className=\"day-selector day-title\">\r\n              {days.map((day) => (\r\n\r\n                <button\r\n                  key={day}\r\n                  className={`btn day-button ${selectedDay === day ? 'active' : ''}`}\r\n                  onClick={() => setSelectedDay(day)}\r\n                >\r\n                  Dia {day}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Carregando cronograma...</div>\r\n          ) : filteredSchedule.length > 0 ? (\r\n            <ScheduleDay \r\n              day={`Dia ${selectedDay} de Maio`} \r\n              events={filteredSchedule} \r\n            />\r\n          ) : (\r\n            <div className=\"no-events\">\r\n              Nenhum evento programado para este dia/filtro.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}