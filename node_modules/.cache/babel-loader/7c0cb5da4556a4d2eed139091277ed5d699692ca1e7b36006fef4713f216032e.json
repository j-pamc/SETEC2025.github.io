{"ast":null,"code":"var _jsxFileName = \"/workspaces/SETEC2025/src/pages/Schedule.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Schedule.jsx\nimport React, { useState, useEffect } from 'react';\nimport ScheduleDay from '../components/ScheduleDay';\nimport CourseFilter from '../components/CourseFilter';\nimport '../styles/schedule.css';\nimport '../styles/scheduleDay.css';\n\n// Dados de cursos (pode vir de uma API ou arquivo JSON)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COURSES = [{\n  id: 'all',\n  name: 'Todos',\n  color: '#0A2463'\n}, {\n  id: 'einfo',\n  name: 'Eng. Informática',\n  color: '#007EBD'\n}, {\n  id: 'epi',\n  name: 'Eng. de Petróleos',\n  color: '#D72638'\n}, {\n  id: 'emc',\n  name: 'Eng. Mecânica',\n  color: '#595A5B'\n}, {\n  id: 'ecivil',\n  name: 'Eng. Civil',\n  color: '#0B5589'\n}, {\n  id: 'eqm',\n  name: 'Eng. Química',\n  color: '#2E8524'\n}, {\n  id: 'electro',\n  name: 'Eng. Electrotécnica',\n  color: '#F9AA0E'\n}];\nconst Schedule = () => {\n  _s();\n  const [schedule, setSchedule] = useState([]);\n  const [filteredSchedule, setFilteredSchedule] = useState([]);\n  const [selectedDay, setSelectedDay] = useState('28');\n  const [selectedCourse, setSelectedCourse] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Simulação de carregamento de dados\n    const fetchSchedule = async () => {\n      try {\n        // Substitua por uma chamada real à API\n        // const response = await fetch('/api/schedule');\n        // const data = await response.json();\n\n        // Dados mockados temporários\n        const mockData = [{\n          id: 1,\n          day: \"28\",\n          time: \"09:00-10:00\",\n          title: \"Abertura Oficial\",\n          type: \"Cerimônia\",\n          course: \"all\",\n          location: \"Auditório Principal\"\n        }, {\n          id: 1,\n          day: \"29\",\n          time: \"10:00-10:30\",\n          title: \"Evento teste\",\n          type: \"Apresentação\",\n          course: \"all\",\n          location: \"Auditório Principal 1\"\n        }\n        // Adicione mais eventos conforme necessário\n        ];\n        setSchedule(mockData);\n        setFilteredSchedule(mockData.filter(event => event.day === '28'));\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error loading schedule:\", error);\n        setIsLoading(false);\n      }\n    };\n    fetchSchedule();\n  }, []);\n  useEffect(() => {\n    let filtered = schedule.filter(event => event.day === selectedDay);\n    if (selectedCourse !== 'all') {\n      filtered = filtered.filter(event => event.course === selectedCourse);\n    }\n    setFilteredSchedule(filtered);\n  }, [selectedDay, selectedCourse, schedule]);\n  const days = ['28', '29', '30'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"schedule-hero\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cronograma do Evento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Confira a programa\\xE7\\xE3o completa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"schedule-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-filters\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filters-bar\",\n            children: [/*#__PURE__*/_jsxDEV(CourseFilter, {\n              courses: COURSES,\n              selectedCourse: selectedCourse,\n              onCourseSelect: setSelectedCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-selector day-title\",\n              children: days.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn day-button ${selectedDay === day ? 'active' : ''}`,\n                onClick: () => setSelectedDay(day),\n                children: [\"Dia \", day]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Carregando cronograma...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : filteredSchedule.length > 0 ? /*#__PURE__*/_jsxDEV(ScheduleDay, {\n          day: `Dia ${selectedDay} de Maio`,\n          events: filteredSchedule\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-events\",\n          children: \"Nenhum evento programado para este dia/filtro.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"xdpdOrBf/xSxazFL1O0PCOlHLhM=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","ScheduleDay","CourseFilter","jsxDEV","_jsxDEV","COURSES","id","name","color","Schedule","_s","schedule","setSchedule","filteredSchedule","setFilteredSchedule","selectedDay","setSelectedDay","selectedCourse","setSelectedCourse","isLoading","setIsLoading","fetchSchedule","mockData","day","time","title","type","course","location","filter","event","error","console","filtered","days","className","children","fileName","_jsxFileName","lineNumber","columnNumber","courses","onCourseSelect","map","onClick","length","events","_c","$RefreshReg$"],"sources":["/workspaces/SETEC2025/src/pages/Schedule.jsx"],"sourcesContent":["// src/pages/Schedule.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport ScheduleDay from '../components/ScheduleDay';\r\nimport CourseFilter from '../components/CourseFilter';\r\nimport '../styles/schedule.css';\r\nimport '../styles/scheduleDay.css';\r\n\r\n// Dados de cursos (pode vir de uma API ou arquivo JSON)\r\nconst COURSES = [\r\n  { id: 'all', name: 'Todos', color: '#0A2463' },\r\n  { id: 'einfo', name: 'Eng. Informática', color: '#007EBD' },\r\n  { id: 'epi', name: 'Eng. de Petróleos', color: '#D72638' },\r\n  { id: 'emc', name: 'Eng. Mecânica', color: '#595A5B' },\r\n  { id: 'ecivil', name: 'Eng. Civil', color: '#0B5589' },\r\n  { id: 'eqm', name: 'Eng. Química', color: '#2E8524' },\r\n  { id: 'electro', name: 'Eng. Electrotécnica', color: '#F9AA0E' }\r\n];\r\n\r\nconst Schedule = () => {\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [filteredSchedule, setFilteredSchedule] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState('28');\r\n  const [selectedCourse, setSelectedCourse] = useState('all');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulação de carregamento de dados\r\n    const fetchSchedule = async () => {\r\n      try {\r\n        // Substitua por uma chamada real à API\r\n        // const response = await fetch('/api/schedule');\r\n        // const data = await response.json();\r\n        \r\n        // Dados mockados temporários\r\n        const mockData = [\r\n          {\r\n            id: 1,\r\n            day: \"28\",\r\n            time: \"09:00-10:00\",\r\n            title: \"Abertura Oficial\",\r\n            type: \"Cerimônia\",\r\n            course: \"all\",\r\n            location: \"Auditório Principal\"\r\n          },\r\n          {\r\n            id: 1,\r\n            day: \"29\",\r\n            time: \"10:00-10:30\",\r\n            title: \"Evento teste\",\r\n            type: \"Apresentação\",\r\n            course: \"all\",\r\n            location: \"Auditório Principal 1\"\r\n          },\r\n          // Adicione mais eventos conforme necessário\r\n        ];\r\n        \r\n        setSchedule(mockData);\r\n        setFilteredSchedule(mockData.filter(event => event.day === '28'));\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error loading schedule:\", error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSchedule();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = schedule.filter(event => event.day === selectedDay);\r\n    \r\n    if (selectedCourse !== 'all') {\r\n      filtered = filtered.filter(event => event.course === selectedCourse);\r\n    }\r\n    \r\n    setFilteredSchedule(filtered);\r\n  }, [selectedDay, selectedCourse, schedule]);\r\n\r\n  const days = ['28', '29', '30'];\r\n\r\n  return (\r\n    <div className=\"schedule-page\">\r\n      <section className=\"schedule-hero\">\r\n        <div className=\"container\">\r\n          <h1>Cronograma do Evento</h1>\r\n          <p>Confira a programação completa</p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"schedule-content\">\r\n        <div className=\"container\">\r\n        <div className=\"schedule-filters\">\r\n        <div className=\"filters-bar\">\r\n            <CourseFilter\r\n              courses={COURSES}\r\n              selectedCourse={selectedCourse}\r\n              onCourseSelect={setSelectedCourse}\r\n            />\r\n\r\n            <div className=\"day-selector day-title\">\r\n              {days.map((day) => (\r\n\r\n                <button\r\n                  key={day}\r\n                  className={`btn day-button ${selectedDay === day ? 'active' : ''}`}\r\n                  onClick={() => setSelectedDay(day)}\r\n                >\r\n                  Dia {day}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Carregando cronograma...</div>\r\n          ) : filteredSchedule.length > 0 ? (\r\n            <ScheduleDay \r\n              day={`Dia ${selectedDay} de Maio`} \r\n              events={filteredSchedule} \r\n            />\r\n          ) : (\r\n            <div className=\"no-events\">\r\n              Nenhum evento programado para este dia/filtro.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}